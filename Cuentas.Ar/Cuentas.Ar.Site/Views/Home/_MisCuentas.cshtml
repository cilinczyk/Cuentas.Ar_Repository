@model Cuentas.Ar.Entities.M_MisCuentas

<div class="content" id="ParcialMisCuentas">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card ">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">account_balance</i>
                        </div>
                        <h4 class="card-title">Resumen de Cuentas: @Model.FechaDesde.ToShortDateString() - @Model.FechaHasta.ToShortDateString()</h4>
                    </div>
                    <div class="card-body">
                        <div class="row col-md-12">
                            <div class="col-lg-3 col-md-6 col-sm-6">
                                <div class="card card-stats">
                                    <div class="card-header card-header-info card-header-icon">
                                        <div class="card-icon">
                                            <i class="material-icons">attach_money</i>
                                        </div>
                                        <p class="card-category">Saldo</p>
                                        <h3 class="card-title">@string.Format("ARS {0}", Model.SaldoPesos)</h3>
                                    </div>
                                    <div class="card-footer">
                                        <div class="stats">
                                            <span>¡SALDO EN PESOS!</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-6">
                                <div class="card card-stats">
                                    <div class="card-header card-header-warning card-header-icon">
                                        <div class="card-icon">
                                            <i class="material-icons">lock</i>
                                        </div>
                                        <p class="card-category">Ahorros</p>
                                        <h3 class="card-title">@string.Format("ARS {0}", Model.AhorrosPesos)</h3>
                                    </div>
                                    <div class="card-footer">
                                        <div class="stats">
                                            <span>¡AHORROS EN PESOS!</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-6">
                                <div class="card card-stats">
                                    <div class="card-header card-header-success card-header-icon">
                                        <div class="card-icon">
                                            <i class="material-icons">attach_money</i>
                                        </div>
                                        <p class="card-category">Saldo</p>
                                        <h3 class="card-title">@string.Format("USD {0}", Model.SaldoDolares)</h3>
                                    </div>
                                    <div class="card-footer">
                                        <div class="stats">
                                            <span>¡SALDO EN DOLARES!</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-6 col-sm-6">
                                <div class="card card-stats">
                                    <div class="card-header card-header-warning card-header-icon">
                                        <div class="card-icon">
                                            <i class="material-icons">lock</i>
                                        </div>
                                        <p class="card-category">Ahorros</p>
                                        <h3 class="card-title">@string.Format("USD {0}", Model.AhorrosDolares)</h3>
                                    </div>
                                    <div class="card-footer">
                                        <div class="stats">
                                            <span>¡AHORROS EN DOLARES!</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!--Flujo de Dinero-->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">insert_chart</i>
                        </div>
                        <h4 class="card-title">Flujo de Dinero</h4>
                    </div>
                    <div class="card-body ">
                        <div id="GraficoFlujoDinero" style="display:none;">
                            <div>
                                <div class="loadingCenter"></div>
                                <canvas id="ChartFlujoDinero" height="200"></canvas>
                            </div>
                        </div>
                        <div id="SinFlujoDinero" class="mgBottom0" style="display:none; text-align:center">
                            <img src="~/Content/graficos/SinRegistros.PNG" />
                            <div class="alert-light mgBottom0" role="alert">
                                NO SE ENCONTRARON REGISTROS
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--Gastos x Categoria-->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">insert_chart</i>
                        </div>
                        <h4 class="card-title">Gastos por Categoría</h4>
                    </div>
                    <div class="card-body">
                        <div id="GraficoGastosCategoria" style="display:none;">
                            <div>
                                <div class="loadingCenter"></div>
                                <canvas id="ChartGastosCategoria" height="200"></canvas>
                            </div>
                        </div>
                        <div id="SinGastosCategoria" class="mgBottom0" style="display:none; text-align:center">
                            <img src="~/Content/graficos/SinGastosCategoria.PNG" />
                            <div class="alert-light mgBottom0" role="alert">
                                NO SE ENCONTRARON REGISTROS
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!--Balance en Pesos-->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">insert_chart</i>
                        </div>
                        <h4 class="card-title">Balance</h4>
                    </div>
                    <div class="card-body">
                        <div id="GraficoBalance" style="display:none;">
                            <div>
                                <div class="loadingCenter"></div>
                                <canvas id="ChartBalance" height="200"></canvas>
                            </div>
                        </div>
                        <div id="SinBalance" class="mgBottom0" style="display:none; text-align:center">
                            <img src="~/Content/graficos/SinBalance.PNG" />
                            <div class="alert-light mgBottom0" role="alert">
                                NO SE ENCONTRARON REGISTROS
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!--Ultimos Registros-->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header card-header-icon card-header-primary">
                        <div class="card-icon">
                            <i class="material-icons">assignment</i>
                        </div>
                        <h4 class="card-title ">Últimos Recordatorios</h4>
                    </div>
                    <div class="card-body">
                        @if (Model.ListaUltimosRecordatorios != null && Model.ListaUltimosRecordatorios.Count > 0)
                        {
                            <div class="table-responsive">
                                <table class="table">
                                    <thead class=" text-primary">
                                        <tr>
                                            <th>
                                                Recordatorio
                                            </th>
                                            <th>
                                                Vencimiento
                                            </th>
                                            <th>
                                                Importe
                                            </th>
                                            <th>
                                                Estado
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ListaUltimosRecordatorios)
                                        {
                                            <tr>
                                                <td>
                                                    @item.Titulo
                                                </td>
                                                <td>
                                                    @item.FechaVencimiento.ToShortDateString()
                                                </td>
                                                <td>
                                                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:N2}", item.Importe)
                                                </td>
                                                <td>
                                                    @item.EstadoRecordatorio.Descripcion
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="mgBottom0" style="text-align:center">
                                <img src="~/Content/graficos/SinRegistros.PNG" />
                                <div class="alert-light mgBottom0" role="alert">
                                    NO SE ENCONTRARON REGISTROS
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
</div>
</div>
<script src="~/Scripts/Chart.min.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Content/assets/js/plugins/bootstrap-datetimepicker.min.js"></script>
<script>
    $(function ($) {
        $('.datepicker').datetimepicker({ format: 'DD/MM/YYYY', locale: 'es', useCurrent: true });

        $.validator.methods.date = function (value, element) {
            return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
        }

        /* Grafico Flujo de Dinero */
        $.ajax({
            url: "/Home/RefrescarGraficoFlujoDinero",
            type: "POST",
            success: function (result) {
                if (result.data.success) {
                    $("#SinFlujoDinero").hide();
                    $("#GraficoFlujoDinero").fadeIn();
                    $("#GraficoFlujoDinero .loadingCenter").hide();
                    var ctx1 = document.getElementById("ChartFlujoDinero").getContext('2d');
                    var myChart1 = new Chart(ctx1, {
                        type: 'horizontalBar',
                        options:
                            {
                                legend: {
                                    display: false,
                                },
                                "scales":
                                    {
                                        "xAxes": [
                                            {
                                                gridLines: { display: false },
                                                "ticks": {
                                                    "beginAtZero": true
                                                }
                                            }],
                                        "yAxes": [
                                            {
                                                gridLines: { display: false }
                                            }]
                                    }
                            },
                        data:
                            {
                                labels: result.data.labels,
                                datasets: [{
                                    data: result.data.data,
                                    backgroundColor: [
                                        'rgb(40,203,124)',
                                        'rgb(244, 67, 54)',
                                        'rgb(255, 167, 38)'
                                    ],
                                    borderWidth: 1
                                }]
                            }
                    });
                }
                else {
                    $("#GraficoFlujoDinero").hide();
                    $("#SinFlujoDinero").show();
                }
            }
        });

        /* Grafico Gastos por Categoria */
        $.ajax({
            url: "/Home/RefrescarGraficoGastosCategoria",
            type: "POST",
            success: function (result) {
                if (result.data.success) {
                    $("#SinGastosCategoria").hide();
                    $("#GraficoGastosCategoria").fadeIn();
                    $("#GraficoGastosCategoria .loadingCenter").hide();
                    var ctx3 = document.getElementById("ChartGastosCategoria").getContext('2d');
                    var myChart3 = new Chart(ctx3, {
                        type: 'doughnut',
                        options:
                            {
                                legend: {
                                    display: false,
                                },
                            },
                        data:
                            {
                                labels: result.data.labels,
                                datasets: [{
                                    backgroundColor: [
                                        'rgba(255, 99, 132)',
                                        'rgba(54, 162, 235)',
                                        'rgba(255, 206, 86)',
                                        'rgba(75, 192, 192)',
                                        'rgba(153, 102, 255)',
                                        'rgba(255, 159, 64)',
                                        'rgba(0,255,0)',
                                        'rgba(0, 0, 255)',
                                        'rgba(125, 39, 248)',
                                        'rgba(212, 208, 204)',
                                        'rgba(254, 209, 79)',
                                        'rgba(172, 148, 64)'
                                    ],
                                    data: result.data.data,
                                    borderWidth: 1
                                }]
                            }
                    });
                }
                else {
                    $("#GraficoGastosCategoria").hide();
                    $("#SinGastosCategoria").show();
                }
            }
        });

        /* Grafico Balance */
        $.ajax({
            url: "/Home/RefrescarGraficoBalance",
            type: "POST",
            success: function (result) {
                if (result.data.success) {
                    $("#SinBalance").hide();
                    $("#GraficoBalance").fadeIn();
                    $("#GraficoBalance .loadingCenter").hide();

                    var ctx2 = document.getElementById("ChartBalance").getContext('2d');
                    var gradientFill = ctx2.createLinearGradient(0, 100, 0, 350);
                    gradientFill.addColorStop(0, "rgba(75, 192, 192, 0.4)");
                    gradientFill.addColorStop(1, "rgba(255, 255, 255, 0.4)");

                    var myChart2 = new Chart(ctx2, {
                        type: 'line',
                        options:
                            {
                                legend: {
                                    display: true,
                                },
                            },
                        data:
                            {
                                labels: result.data.labels,
                                datasets: [{
                                    label: "Saldo en Pesos ($)",
                                    lineTension: 0.1,
                                    backgroundColor: gradientFill,
                                    borderWidth: 3,
                                    borderColor: "rgba(75, 192, 192, 1)",
                                    borderCapStyle: 'butt',
                                    borderDash: [],
                                    borderDashOffset: 0.0,
                                    borderJoinStyle: 'miter',
                                    pointBorderColor: "rgba(75, 192, 192, 1)",
                                    pointBackgroundColor: "#fff",
                                    pointBorderWidth: 0,
                                    pointHoverRadius: 0,
                                    pointHoverBackgroundColor: "rgba(75, 192, 192, 1)",
                                    pointBorderColor: "rgba(220, 220, 220, 1)",
                                    pointHoverBorderWidth: 0,
                                    pointRadius: 0,
                                    pointHitRadius: 10,
                                    data: result.data.data,
                                }]
                            }
                    });
                }
                else {
                    $("#GraficoBalance").hide();
                    $("#SinBalance").show();
                }
            }
        });
    });
</script>